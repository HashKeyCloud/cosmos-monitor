<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="8dd664b2-a9c2-4d12-86b7-dc8790ff8b88" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/db/cosmos-db/db_client.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/rpc/cosmos-rpc/rpc_client.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/rpc/injective-rpc/rpc_client.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/rpc/injective-rpc/rpc_client_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/db/Init.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/db/db.go" beforeDir="false" afterPath="$PROJECT_DIR$/db/db.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/db/db_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/db/cosmos-db/db_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/monitor/monitor.go" beforeDir="false" afterPath="$PROJECT_DIR$/monitor/monitor.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rpc/cosmos/rpc_client.go" beforeDir="false" afterPath="$PROJECT_DIR$/rpc/rpc.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rpc/cosmos/rpc_client_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/rpc/cosmos-rpc/rpc_client_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/rpc/injective/rpc_client.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/rpc/injective/rpc_client_test.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/utils/operator2self.go" beforeDir="false" afterPath="$PROJECT_DIR$/utils/operator2self.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2Gu51IZhM2mXawaxy4AE70Idmu0" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.format.on.save.advertiser.fired" value="true" />
    <property name="go.formatter.settings.were.checked" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.modules.go.list.on.any.changes.was.set" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.watchers.conflict.with.on.save.actions.check.performed" value="true" />
    <property name="last_opened_file_path" value="$USER_HOME$" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/db/cosmos-db" />
      <recent name="$PROJECT_DIR$/rpc/injective-rpc" />
      <recent name="$PROJECT_DIR$/rpc/cosmosRPC" />
      <recent name="$PROJECT_DIR$/db/cosmosDb" />
      <recent name="$PROJECT_DIR$/db" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestGetValPerformance in cosmosmonitor/rpc/injective">
    <configuration name="TestA in cosmosmonitor/rpc/cosmos" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="cosmos-monitor" />
      <working_directory value="$PROJECT_DIR$/rpc/cosmos" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="cosmosmonitor/rpc/cosmos" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestA\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetProposal in cosmosmonitor/rpc/injective" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="cosmos-monitor" />
      <working_directory value="$PROJECT_DIR$/rpc/injective" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="cosmosmonitor/rpc/injective" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetProposal\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetValInfo in cosmosmonitor/rpc/cosmos" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="cosmos-monitor" />
      <working_directory value="$PROJECT_DIR$/rpc/cosmos" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="cosmosmonitor/rpc/cosmos" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetValInfo\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetValInfo in cosmosmonitor/rpc/injective" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="cosmos-monitor" />
      <working_directory value="$PROJECT_DIR$/rpc/injective" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="cosmosmonitor/rpc/injective" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetValInfo\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetValPerformance in cosmosmonitor/rpc/injective" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="cosmos-monitor" />
      <working_directory value="$PROJECT_DIR$/rpc/injective" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="cosmosmonitor/rpc/injective" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetValPerformance\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestGetValPerformance in cosmosmonitor/rpc/injective" />
        <item itemvalue="Go Test.TestGetProposal in cosmosmonitor/rpc/injective" />
        <item itemvalue="Go Test.TestGetValInfo in cosmosmonitor/rpc/injective" />
        <item itemvalue="Go Test.TestGetValInfo in cosmosmonitor/rpc/cosmos" />
        <item itemvalue="Go Test.TestA in cosmosmonitor/rpc/cosmos" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
</project>